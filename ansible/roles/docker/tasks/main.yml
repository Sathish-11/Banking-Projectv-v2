---
- name: Stop existing container if running
  shell: docker stop {{ app_name }} || true
  ignore_errors: yes

- name: Remove existing container if exists
  shell: docker rm {{ app_name }} || true
  ignore_errors: yes

- name: Pull Docker image
  shell: docker pull {{ docker_image }}:{{ docker_tag }}
  timeout: 300

- name: Run application container
  shell: |
    docker run -d \
      --name {{ app_name }} \
      --restart unless-stopped \
      -p {{ host_port }}:{{ app_port }} \
      {{ docker_image }}:{{ docker_tag }}
  
- name: Wait for container to start
  pause:
    seconds: 30

- name: Check if container is running
  shell: docker ps --filter "name={{ app_name }}" --format "table {{.Names}}\t{{.Status}}"
  register: container_status

- name: Display container status
  debug:
    msg: "{{ container_status.stdout }}"
